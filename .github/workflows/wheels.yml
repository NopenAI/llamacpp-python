name: Build

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - main
  push:
    branches:
      - master
      - main
  release:
    types:
      - published

jobs:
  build_wheels:
    name: ${{ matrix.type }} ${{ matrix.arch }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        arch: [auto64]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3
      # Installs poetry
      - uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: "1.4.0"
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.12.1

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          CIBW_TEST_SKIP: '*_arm64 *_universal2:arm64'

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Optional, use if you use setuptools_scm
        submodules: true  # Optional, use if you have submodules

    - name: Install setup dependencies
      run: python -m pip install poetry

    - name: Build SDist
      run: poetry build -f sdist

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  upload_all:
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@v1.5.0
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
